openapi: '3.0.2'
info:
  title: user REST API
  description: A simple user-retrieval API, compliant with REST specifications
  version: '1.0.0'
servers:
  - url: http://localhost:5000
  - url: http://examples
  - url: https://api.server.test/v1
tags:
  - name: User
    description: Operations on users
paths:
  /:
    get:
      summary: Index page
      responses:
        '200':
          description: Successful operation
  /hello:
    get:
      summary: Welcoming page
      responses:
        '200':
          description: Successful operation
  /users:
    get:
      summary: Return a list of users
      description: Fetching the entire list of users in the database
      responses: 
        '200':
          description: Successful operation
  /user/{user_id}:
    get:
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          description: ID of the user to be retrieved
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
  /user:
    post:
      summary: Create user
      description: Created user object
      operationId: createUser
      responses: 
        '201':
          description: Successful operation, Created
        '422':
          description: Validation exception
  /users/{user_id} :
    put:
      summary: Update an existing user
      description: Update an existing user by Id.
      parameters:
        - name: user_id
          in: path
          description: ID of the user that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Successful operation, Updated
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '422':
          description: Validation exception
  /users/{user_id}/ : 
    delete:
        summary: Delete a user
        description: Delete an existing user
        operationId: deleteUser
        parameters:
          - name: user_id
            in: path
            description: ID of the user that needs to be deleted
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '200':
            description: Successful operation, Deleted
          '400':
            description: Invalid ID supplied
          '404':
            description: User not found
  /users/{user_id}/{user_status}:
    put: 
        summary: Update user status
        description: Super admin is accountable for this operation
        parameters:
          - name: user_id
            in: path
            description: ID of the user that needs to be deleted
            required: true
            schema:
              type: integer
              format: int64
        responses: 
          '201':
            description: Successful operation, Activated
          '400':
            description: Invalid ID supplied
          '404':
            description: User not found
          
        


components:
  schemas:
    
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        username:
          type: string
          example: johndoe
        email:
          type: string
          example: john.doe@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        insertion_date:
          type: string
          description: Start date
          example: "2017-01-01"
          format: date
          pattern: "YYYY-MM-DD"
          minLength: 0
          maxLength: 10
        update_date:
          type: string
          description: update date
          example: "2017-01-01"
          format: date
          pattern: "YYYY-MM-DD"
          minLength: 0
          maxLength: 10 
        status:
          type: string
          description: User Status
          example: Active 
      xml:
        name: user

